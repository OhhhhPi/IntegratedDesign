<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uestc.monitor.mapper.TempHmdRecordMapper">
  <resultMap id="BaseResultMap" type="com.uestc.monitor.pojo.TempHmdRecord">
    <id column="RecordID" jdbcType="BIGINT" property="recordid" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="temp" jdbcType="INTEGER" property="temp" />
    <result column="hmd" jdbcType="INTEGER" property="hmd" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="temperatureSensor" jdbcType="BIT" property="temperaturesensor" />
    <result column="humiditySensor" jdbcType="BIT" property="humiditysensor" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from TempHmdRecord
    where RecordID = #{recordid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.uestc.monitor.pojo.TempHmdRecord">
    <selectKey keyProperty="recordid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into TempHmdRecord (userID, temp, hmd, 
      time, temperatureSensor, humiditySensor
      )
    values (#{userid,jdbcType=INTEGER}, #{temp,jdbcType=INTEGER}, #{hmd,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{temperaturesensor,jdbcType=BIT}, #{humiditysensor,jdbcType=BIT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.uestc.monitor.pojo.TempHmdRecord">
    update TempHmdRecord
    set userID = #{userid,jdbcType=INTEGER},
      temp = #{temp,jdbcType=INTEGER},
      hmd = #{hmd,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      temperatureSensor = #{temperaturesensor,jdbcType=BIT},
      humiditySensor = #{humiditysensor,jdbcType=BIT}
    where RecordID = #{recordid,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select RecordID, userID, temp, hmd, time, temperatureSensor, humiditySensor
    from TempHmdRecord
    where RecordID = #{recordid,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select RecordID, userID, temp, hmd, time, temperatureSensor, humiditySensor
    from TempHmdRecord
  </select>
  <select id="selectRecentRecord" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select RecordID, userID, temp, hmd, time, temperatureSensor, humiditySensor
    from TempHmdRecord
    where userID = #{userid,jdbcType=INTEGER}
    order by RecordID desc
    limit 1
  </select>
  <select id="select12hHmd" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select hmd
    from TempHmdRecord
    where MID(time FROM -5 FOR 2)='00'
    and userID = #{userid,jdbcType=INTEGER}
    group by MID(time from -8 for 2)
    order by RecordID desc
    limit 12
  </select>
  <select id="select12hTemp" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select temp
    from TempHmdRecord
    where MID(time FROM -5 FOR 2)='00'
      and userID = #{userid,jdbcType=INTEGER}
    group by MID(time from -8 for 2)
    order by RecordID desc
    limit 12
  </select>
</mapper>